{
  "create_block_data_stream": "CREATE STREAM block_data (block VARCHAR, extrinsics ARRAY<VARCHAR>, events ARRAY<VARCHAR>) WITH (kafka_topic='block_data', value_format='JSON');",
  "create_block_stream": "CREATE STREAM BLOCK WITH (KAFKA_TOPIC='BLOCK', PARTITIONS=1, REPLICAS=1, VALUE_FORMAT='AVRO') AS SELECT CAST(EXTRACTJSONFIELD(BLOCK_DATA.BLOCK, '$.header.number') AS INTEGER) NUMBER, EXTRACTJSONFIELD(BLOCK_DATA.BLOCK, '$.header.hash') HASH, EXTRACTJSONFIELD(BLOCK_DATA.BLOCK, '$.header.stateRoot') STATE_ROOT, EXTRACTJSONFIELD(BLOCK_DATA.BLOCK, '$.header.extrinsicsRoot') EXTRINSICS_ROOT, EXTRACTJSONFIELD(BLOCK_DATA.BLOCK, '$.header.parentHash') PARENT_HASH, EXTRACTJSONFIELD(BLOCK_DATA.BLOCK, '$.header.digest') DIGEST, CAST(EXTRACTJSONFIELD(BLOCK_DATA.EXTRINSICS[1], '$.method.args.now') AS BIGINT) CREATE_TIME FROM BLOCK_DATA BLOCK_DATA EMIT CHANGES;",
  "create_event_stream": "create stream event with (PARTITIONS=1, VALUE_FORMAT='AVRO') as SELECT cast(extractjsonfield(block, '$.header.number') as integer) as block_number, explode(events) as event from block_data EMIT CHANGES;",
  "create_extrinsic_stream": "create stream extrinsic with (PARTITIONS=1, VALUE_FORMAT='AVRO') as SELECT cast(extractjsonfield(block, '$.header.number') as integer) as block_number, explode(extrinsics) as extrinsic from block_data EMIT CHANGES;",
  "create_profit_events_filter_rules": "create stream event (block_number integer, event string) with (kafka_topic='EVENT', PARTITIONS = 1, VALUE_FORMAT = 'AVRO');\nINSERT INTO event\nSELECT cast(\n        extractjsonfield(block, '$.header.number') as integer\n    ) as block_number,\n    explode(events) as event\nfrom block_data EMIT CHANGES;\n\nCREATE TABLE profit_events_filter_rules (method varchar(30)) WITH (KAFKA_TOPIC = 'profit_events_filter_rules',VALUE_FORMAT = 'JSON',KEY = 'METHOD',PARTITIONS = 1);\n\nINSERT INTO profit_events_filter_rules (method) VALUES ('Reward');\nINSERT INTO profit_events_filter_rules (method) VALUES ('Deposit');",
  "create_profit_events_filter_rules_stream": "CREATE STREAM profit_events_filter (block_number integer, event string) with (kafka_topic='PROFIT_EVENTS_FILTER', PARTITIONS = 1, VALUE_FORMAT = 'AVRO'); INSERT INTO profit_events_filter select E.block_number,E.event from EVENT E INNER JOIN PROFIT_EVENTS_FILTER_RULES P ON extractjsonfield(E.event, '$.method') = P.method WHERE extractjsonfield(E.event, '$.section') != 'treasury';"
}
